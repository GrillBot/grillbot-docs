name: CI/CD

on:
  push:
    branches: [master]
    paths-ignore:
      - "debug.ps1"
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [master]
    paths-ignore:
      - "debug.ps1"
  workflow_dispatch:

jobs:
  LintPythonCode:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('requirements*') }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install --upgrade --upgrade-strategy eager flake8
      - name: Run flake8
        run: flake8 .
  CheckJsonFiles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check JSON files
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/json-lint/master/pipeline.sh)
  CheckMarkdownContent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Markdown lint
        uses: nosborn/github-action-markdown-cli@v1.1.1
        with:
          files: .
          args: "README.md"
  BuildContainer:
    runs-on: ubuntu-latest
    needs: [LintPythonCode, CheckJsonFiles, CheckMarkdownContent]
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/grillbot/grillbot-docs:master
  DeployToDevelopment:
    runs-on: "ubuntu-latest"
    environment: "Development"
    needs: "BuildContainer"
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deployment via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_DEV_HOST }}
          username: ${{ secrets.SSH_DEV_USERNAME }}
          password: ${{ secrets.SSH_DEV_PASSWORD }}
          port: 22
          script: echo '${{ secrets.SSH_DEV_PASSWORD }}' | sudo -S python3 /scripts/deploy/deploy.py grillbot-docs
  DeployToProduction:
    runs-on: ubuntu-latest
    environment: "Production"
    needs: BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S python3 /scripts/deploy/deploy.py prod/grillbot-docs
