LogItem: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  CreatedAt: timestamp with time zone
  GuildId: character varying (32)
  UserId: character varying (32)
  ChannelId: character varying (32)
  DiscordId: character varying (32)
  Type: integer,
  LogDate: date
  IsDeleted: boolean
}

Files: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  LogItemId: uuid {constraint: foreign_key}
  Filename: character varying(255)
  Extension: character varying(255)
  Size: bigint
}

LogItem.ID -> Files.LogItemId

# Model tables

ApiRequests: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  ControllerName: character varying (128)
  ActionName: character varying (128)
  StartAt: timestamp with time zone
  EndAt: timestamp with time zone
  Method: character varying (10)
  TemplatePath: text
  Path: text
  Parameters: jsonb
  Language: character varying (10)
  ApiGroupName: character varying (5)
  Headers: jsonb
  Identification: character varying (512)
  Ip: character varying (64)
  Result: character varying (128)
  IsSuccess: boolean
  RequestDate: date
  Role: character varying (32)
  ForwardedIp: character varying (64)
  Duration: bigint
}

LogItem.ID -> ApiRequests.LogItemId

LogMessages: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  Message: text
  Severity: integer
  Source: character varying (512)
  SourceAppName: character varying (100)
}

LogItem.ID -> LogMessages.LogItemId

DeletedEmotes: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  EmoteId: character varying(32)
  EmoteName: text
}

LogItem.ID -> DeletedEmotes.LogItemId

Unbans: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  UserId: character varying (32)
}

LogItem.ID -> Unbans.LogItemId

JobExecutions: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  JobName: character varying(128)
  Result: text
  StartAt: timestamp with time zone
  EndAt: timestamp with time zone
  WasError: boolean
  StartUserId: character varying (32)
  Duration: bigint
  JobDate: date
}

LogItem.ID -> JobExecutions.LogItemId

ChannelInfoItems: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  ChannelName: text
  SlowMode: integer
  Type: integer
  IsNsfw: boolean
  Bitrate: integer
  Topic: text
  Position: integer
  Flags: integer
}

ChannelCreatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  ChannelInfoId: uuid {constraint: foreign_key}
}

LogItem.Id -> ChannelCreatedItems.LogItemId
ChannelCreatedItems.ChannelInfoId -> ChannelInfoItems.Id

ChannelDeletedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  ChannelInfoId: uuid {constraint: foreign_key}
}

LogItem.Id -> ChannelDeletedItems.LogItemId
ChannelDeletedItems.ChannelInfoId -> ChannelInfoItems.Id

ChannelUpdatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  BeforeId: uuid {constraint: foreign_key}
  AfterId: uuid {constraint: foreign_key}
}

LogItem.Id -> ChannelUpdatedItems.LogItemId
ChannelUpdatedItems.BeforeId -> ChannelInfoItems.Id
ChannelUpdatedItems.AfterId -> ChannelInfoItems.Id

GuildInfoItems: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  DefaultMessageNotifications: integer
  Description: text
  VanityUrl: text
  BannerId: text
  DiscoverySplashId: text
  SplashId: text
  IconId: text
  IconData: bytea
  PublicUpdatesChannelId: character varying (32)
  RulesChannelId: character varying (32)
  SystemChannelId: character varying (32)
  AfkChannelId: character varying (32)
  AfkTimeout: integer
  Name: character varying (100)
  MfaLevel: integer
  VerificationLevel: integer
  ExplicitContentFilter: integer
  Features: bigint
  PremiumTier: integer
  SystemChannelFlags: integer
  NsfwLevel: integer
}

GuildUpdatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  BeforeId: uuid {constraint: foreign_key}
  AfterId: uuid {constraint: foreign_key}
}

LogItem.ID -> GuildUpdatedItems.LogItemId
GuildUpdatedItems.BeforeId -> GuildInfoItems.ID
GuildUpdatedItems.AfterId -> GuildInfoItems.ID

MemberRoleUpdatedItems: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  LogItemId: uuid {constraint: foreign_key}
  UserId: character varying (32)
  RoleId: character varying (32)
  RoleName: text
  RoleColor: character varying (32)
  IsAdded: boolean
}

LogItem.ID -> MemberRoleUpdatedItems.LogItemId

MessageDeletedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  AuthorId: character varying (32)
  MessageCreatedAt: timestamp with time zone
  Content: text
}

EmbedInfoItems: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  MessageDeletedId: uuid {constraint: foreign_key}
  Title: character varying(256),
  Type: character varying(16)
  ImageInfo: text
  VideoInfo: text
  AuthorName: text
  ContainsFooter: boolean
  ProviderName: text
  ThumbnailInfo: text
}

EmbedFields: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  EmbedInfoId: uuid {constraint: foreign_key}
  Name: character varying(256)
  Value: character varying(1024)
  Inline: boolean
}

LogItem.Id -> MessageDeletedItems.LogItemId
MessageDeletedItems.Id -> EmbedInfoItems.MessageDeletedId
EmbedInfoItems.Id -> EmbedFields.EmbedInfoId

MessageEditedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  JumpUrl: text
  ContentBefore: text
  ContentAfter: text
}

LogItem.ID -> MessageEditedItems.LogItemId

OverwriteInfoItems: {
  shape: sql_table

  Id: uuid {constraint: foreign_key}
  Target: integer
  TargetId: character varying (32)
  AllowValue: text
  DenyValue: text
}

OverwriteCreatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  OverwriteInfoId: uuid {constraint: foreign_key}
}

LogItem.ID -> OverwriteCreatedItems.LogItemId
OverwriteCreatedItems.OverwriteInfoId -> OverwriteInfoItems.ID

OverwriteUpdatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  BeforeId: uuid {constraint: foreign_key}
  AfterId: uuid {constraint: foreign_key}
}

LogItem.ID -> OverwriteUpdatedItems.LogItemId
OverwriteUpdatedItems.BeforeId -> OverwriteInfoItems.ID
OverwriteUpdatedItems.AfterId -> OverwriteInfoItems.ID

OverwriteDeletedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  OverwriteInfoId: uuid {constraint: foreign_key}
}

LogItem.ID -> OverwriteDeletedItems.LogItemId
OverwriteDeletedItems.OverwriteInfoId -> OverwriteInfoItems.ID

UserJoinedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  MemberCount: integer
}

LogItem.ID -> UserJoinedItems.LogItemId

UserLeftItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  UserId: character varying (32)
  MemberCount: integer
  IsBan: boolean
  BanReason: text
}

LogItem.ID -> UserLeftItems.LogItemId

InteractionCommands: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  Name: text
  ModuleName: text
  MethodName: text
  Parameters: jsonb
  HasResponded: boolean
  IsValidToken: boolean
  IsSuccess: boolean
  CommandError: integer
  ErrorReason: text
  Duration: integer
  Exception: text
  Locale: text
  EndAt: timestamp with time zone
  InteractionDate: date
}

LogItem.ID -> InteractionCommands.LogItemId

ThreadInfoItems: {
  shape: sql_table

  Id: uuid {constraint: foreign_key}
  ThreadName: text
  SlowMode: integer
  Type: integer
  IsArchived: boolean
  ArchiveDuration: integer
  IsLocked: boolean
  Tags: json
}

ThreadDeletedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  ThreadInfoId: uuid {constraint: foreign_key}
}

LogItem.ID -> ThreadDeletedItems.LogItemId
ThreadDeletedItems.ThreadInfoId -> ThreadInfoItems.ID

ThreadUpdatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  BeforeId: uuid {constraint: foreign_key}
  AfterId: uuid {constraint: foreign_key}
}

LogItem.ID -> ThreadUpdatedItems.LogItemId
ThreadUpdatedItems.BeforeId -> ThreadInfoItems.ID
ThreadUpdatedItems.AfterId -> ThreadInfoItems.ID

MemberInfos: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  UserId: character varying (32)
  Nickname: character varying (32)
  IsMuted: boolean
  IsDeaf: boolean
  SelfUnverifyMinimalTime: text
  Flags: integer
  PointsDeactivated: boolean
}

MemberUpdatedItems: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  BeforeId: uuid {constraint: foreign_key}
  AfterId: uuid {constraint: foreign_key}
}

LogItem.Id -> MemberUpdatedItems.LogItemId
MemberUpdatedItems.BeforeId -> MemberInfos.Id
MemberUpdatedItems.AfterId -> MemberInfos.Id

RoleInfos: {
  shape: sql_table

  Id: uuid {constraint: primary_key}
  RoleId: character varying (32)
  Name: character varying (100)
  Color: character varying (32)
  IsMentionable: boolean
  IsHoisted: boolean
  Permissions: jsonb
  IconId: character varying (256)
}

RoleDeleted: {
  shape: sql_table

  LogItemId: uuid {constraint: foreign_key}
  RoleInfoId: uuid {constraint: foreign_key}
}

LogItem.Id -> RoleDeleted.LogItemId
RoleDeleted.RoleInfoId -> RoleInfos.Id
